BEGIN;
BEGIN
EXPLAIN (ANALYZE, BUFFERS)
select
	c_custkey,
	c_name,
	sum(l_extendedprice * (1 - l_discount)) as revenue,
	c_acctbal,
	n_name,
	c_address,
	c_phone,
	c_comment
from
	customer,
	orders,
	lineitem,
	nation
where
	c_custkey = o_custkey
	and l_orderkey = o_orderkey
	and o_orderdate >= date '1993-08-01'
	and o_orderdate < cast(date '1993-08-01' + interval '3 month' as date)
	and l_returnflag = 'R'
	and c_nationkey = n_nationkey
group by
	c_custkey,
	c_name,
	c_acctbal,
	c_phone,
	n_name,
	c_address,
	c_comment
order by
	revenue desc
LIMIT 20;
                                                                                                QUERY PLAN                                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1145860.66..1145860.71 rows=20 width=175) (actual time=25749.719..25749.728 rows=20 loops=1)
   Buffers: shared hit=548321 read=860407
   ->  Sort  (cost=1145860.66..1147264.12 rows=561384 width=175) (actual time=25749.666..25749.670 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::double precision - lineitem.l_discount))))
         Sort Method: top-N heapsort  Memory: 30kB
         Buffers: shared hit=548321 read=860407
         ->  HashAggregate  (cost=1125308.59..1130922.43 rows=561384 width=175) (actual time=25184.506..25600.556 rows=381828 loops=1)
               Group Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
               Buffers: shared hit=548318 read=860407
               ->  Hash Join  (cost=350333.03..1111273.99 rows=561384 width=175) (actual time=4970.237..23324.284 rows=1147127 loops=1)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     Buffers: shared hit=548318 read=860407
                     ->  Hash Join  (cost=350331.47..1103553.40 rows=561384 width=153) (actual time=4970.188..22962.238 rows=1147127 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           Buffers: shared hit=548317 read=860407
                           ->  Hash Join  (cost=281303.47..1026104.64 rows=561384 width=12) (actual time=3378.933..20452.941 rows=1147127 loops=1)
                                 Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                 Buffers: shared hit=548315 read=825131
                                 ->  Index Scan using lineitem_l_orderkey_idx_l_returnflag on lineitem  (cost=0.43..683761.30 rows=14780392 width=12) (actual time=0.072..12936.243 rows=14822992 loops=1)
                                       Buffers: shared hit=548313 read=595435
                                 ->  Hash  (cost=274174.36..274174.36 rows=570294 width=8) (actual time=3373.557..3373.557 rows=574214 loops=1)
                                       Buckets: 1048576  Batches: 1  Memory Usage: 30623kB
                                       Buffers: shared hit=2 read=229696
                                       ->  Bitmap Heap Scan on orders  (cost=12097.95..274174.36 rows=570294 width=8) (actual time=191.627..3164.197 rows=574214 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1993-08-01'::date) AND (o_orderdate < '1993-11-01'::date))
                                             Heap Blocks: exact=228127
                                             Buffers: shared hit=2 read=229696
                                             ->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..11955.38 rows=570294 width=0) (actual time=131.547..131.547 rows=574214 loops=1)
                                                   Index Cond: ((o_orderdate >= '1993-08-01'::date) AND (o_orderdate < '1993-11-01'::date))
                                                   Buffers: shared read=1571
                           ->  Hash  (cost=50278.00..50278.00 rows=1500000 width=145) (actual time=1579.570..1579.570 rows=1500000 loops=1)
                                 Buckets: 2097152  Batches: 1  Memory Usage: 281501kB
                                 Buffers: shared hit=2 read=35276
                                 ->  Seq Scan on customer  (cost=0.00..50278.00 rows=1500000 width=145) (actual time=0.014..787.680 rows=1500000 loops=1)
                                       Buffers: shared hit=2 read=35276
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.030..0.030 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 10kB
                           Buffers: shared hit=1
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.009..0.013 rows=25 loops=1)
                                 Buffers: shared hit=1
 Planning time: 7.951 ms
 Execution time: 25766.908 ms
(42 rows)

COMMIT;
COMMIT
