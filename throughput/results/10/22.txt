BEGIN;
BEGIN
EXPLAIN (ANALYZE, BUFFERS)
select
	cntrycode,
	count(*) as numcust,
	sum(c_acctbal) as totacctbal
from
	(
		select
			substr(c_phone, 1, 2) as cntrycode,
			c_acctbal
		from
			customer
		where
			substr(c_phone, 1, 2) in
				('15', '14', '32', '19', '11', '18', '12')
			and c_acctbal > (
				select
					avg(c_acctbal)
				from
					customer
				where
					c_acctbal > 0.00
					and substr(c_phone, 1, 2) in
						('15', '14', '32', '19', '11', '18', '12')
			)
			and not exists (
				select
					*
				from
					orders
				where
					o_custkey = c_custkey
			)
	) as vip
group by
	cntrycode
order by
	cntrycode;
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=697597.06..697597.07 rows=3 width=20) (actual time=12882.432..12882.433 rows=7 loops=1)
   Sort Key: (substr((customer.c_phone)::text, 1, 2))
   Sort Method: quicksort  Memory: 25kB
   Buffers: shared hit=31 read=328344 written=12969
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=52869.63..52869.64 rows=1 width=4) (actual time=870.829..870.829 rows=1 loops=1)
           Buffers: shared hit=13 read=36331 written=64
           ->  Bitmap Heap Scan on customer customer_1  (cost=6639.34..51917.25 rows=380949 width=4) (actual time=93.397..803.191 rows=382418 loops=1)
                 Recheck Cond: ((substr((c_phone)::text, 1, 2) = ANY ('{15,14,32,19,11,18,12}'::text[])) AND (c_acctbal > 0::double precision))
                 Heap Blocks: exact=35278
                 Buffers: shared hit=13 read=36331 written=64
                 ->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6544.11 rows=380949 width=0) (actual time=85.024..85.024 rows=382418 loops=1)
                       Index Cond: (substr((c_phone)::text, 1, 2) = ANY ('{15,14,32,19,11,18,12}'::text[]))
                       Buffers: shared hit=11 read=1055
   ->  HashAggregate  (cost=644727.36..644727.40 rows=3 width=20) (actual time=12882.384..12882.386 rows=7 loops=1)
         Group Key: substr((customer.c_phone)::text, 1, 2)
         Buffers: shared hit=28 read=328344 written=12969
         ->  Hash Anti Join  (cost=600761.77..644289.18 rows=58423 width=20) (actual time=12165.481..12859.062 rows=63451 loops=1)
               Hash Cond: (customer.c_custkey = orders.o_custkey)
               Buffers: shared hit=28 read=328344 written=12969
               ->  Bitmap Heap Scan on customer  (cost=2906.42..41850.31 rows=139653 width=24) (actual time=931.786..1498.771 rows=190696 loops=1)
                     Recheck Cond: ((substr((c_phone)::text, 1, 2) = ANY ('{15,14,32,19,11,18,12}'::text[])) AND (c_acctbal > $0))
                     Heap Blocks: exact=35172
                     Buffers: shared hit=24 read=72038 written=399
                     ->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2871.50 rows=139653 width=0) (actual time=923.314..923.314 rows=190696 loops=1)
                           Index Cond: ((substr((c_phone)::text, 1, 2) = ANY ('{15,14,32,19,11,18,12}'::text[])) AND (c_acctbal > $0))
                           Buffers: shared hit=22 read=36868 written=93
               ->  Hash  (cost=408106.27..408106.27 rows=15179927 width=4) (actual time=11148.462..11148.462 rows=15000000 loops=1)
                     Buckets: 16777216  Batches: 1  Memory Usage: 658416kB
                     Buffers: shared hit=1 read=256306 written=12570
                     ->  Seq Scan on orders  (cost=0.00..408106.27 rows=15179927 width=4) (actual time=0.019..6131.073 rows=15000000 loops=1)
                           Buffers: shared hit=1 read=256306 written=12570
 Planning time: 3.435 ms
 Execution time: 12886.560 ms
(34 rows)

COMMIT;
COMMIT
