BEGIN;
BEGIN
EXPLAIN (ANALYZE, BUFFERS)
select
	cntrycode,
	count(*) as numcust,
	sum(c_acctbal) as totacctbal
from
	(
		select
			substr(c_phone, 1, 2) as cntrycode,
			c_acctbal
		from
			customer
		where
			substr(c_phone, 1, 2) in
				('30', '12', '29', '10', '16', '31', '21')
			and c_acctbal > (
				select
					avg(c_acctbal)
				from
					customer
				where
					c_acctbal > 0.00
					and substr(c_phone, 1, 2) in
						('30', '12', '29', '10', '16', '31', '21')
			)
			and not exists (
				select
					*
				from
					orders
				where
					o_custkey = c_custkey
			)
	) as vip
group by
	cntrycode
order by
	cntrycode;
                                                                             QUERY PLAN                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=700732.07..700732.08 rows=3 width=20) (actual time=11929.247..11929.248 rows=7 loops=1)
   Sort Key: (substr((customer.c_phone)::text, 1, 2))
   Sort Method: quicksort  Memory: 25kB
   Buffers: shared hit=30 read=329608 dirtied=254 written=13450
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=52968.86..52968.87 rows=1 width=4) (actual time=824.457..824.457 rows=1 loops=1)
           Buffers: shared hit=10 read=36331
           ->  Bitmap Heap Scan on customer customer_1  (cost=6679.35..52011.33 rows=383009 width=4) (actual time=91.205..753.373 rows=381862 loops=1)
                 Recheck Cond: ((substr((c_phone)::text, 1, 2) = ANY ('{30,12,29,10,16,31,21}'::text[])) AND (c_acctbal > 0::double precision))
                 Heap Blocks: exact=35277
                 Buffers: shared hit=10 read=36331
                 ->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6583.59 rows=383009 width=0) (actual time=82.703..82.703 rows=381862 loops=1)
                       Index Cond: (substr((c_phone)::text, 1, 2) = ANY ('{30,12,29,10,16,31,21}'::text[]))
                       Buffers: shared hit=8 read=1056
   ->  HashAggregate  (cost=647763.14..647763.18 rows=3 width=20) (actual time=11929.190..11929.190 rows=7 loops=1)
         Group Key: substr((customer.c_phone)::text, 1, 2)
         Buffers: shared hit=27 read=329608 dirtied=254 written=13450
         ->  Hash Anti Join  (cost=603750.57..647322.60 rows=58738 width=20) (actual time=11242.884..11905.340 rows=63809 loops=1)
               Hash Cond: (customer.c_custkey = orders.o_custkey)
               Buffers: shared hit=27 read=329608 dirtied=254 written=13450
               ->  Bitmap Heap Scan on customer  (cost=2942.17..41905.88 rows=140408 width=24) (actual time=883.696..1430.752 rows=190983 loops=1)
                     Recheck Cond: ((substr((c_phone)::text, 1, 2) = ANY ('{30,12,29,10,16,31,21}'::text[])) AND (c_acctbal > $0))
                     Heap Blocks: exact=35170
                     Buffers: shared hit=22 read=72037 written=427
                     ->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2907.06 rows=140408 width=0) (actual time=875.662..875.662 rows=190983 loops=1)
                           Index Cond: ((substr((c_phone)::text, 1, 2) = ANY ('{30,12,29,10,16,31,21}'::text[])) AND (c_acctbal > $0))
                           Buffers: shared hit=20 read=36869
               ->  Hash  (cost=410122.07..410122.07 rows=15254907 width=4) (actual time=10309.141..10309.141 rows=15000000 loops=1)
                     Buckets: 16777216  Batches: 1  Memory Usage: 658416kB
                     Buffers: shared hit=2 read=257571 dirtied=254 written=13023
                     ->  Seq Scan on orders  (cost=0.00..410122.07 rows=15254907 width=4) (actual time=0.017..6166.878 rows=15000000 loops=1)
                           Buffers: shared hit=2 read=257571 dirtied=254 written=13023
 Planning time: 3.209 ms
 Execution time: 11933.579 ms
(34 rows)

COMMIT;
COMMIT
